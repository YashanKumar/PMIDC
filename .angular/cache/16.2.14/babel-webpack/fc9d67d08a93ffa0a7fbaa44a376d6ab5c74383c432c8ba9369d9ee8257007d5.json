{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass SharedService {\n  getstate() {\n    return this.http.post(\"http://localhost:3000/States\", data);\n  }\n  constructor(http) {\n    this.http = http;\n  }\n  postState(data) {\n    return this.http.post(\"http://localhost:3000/States\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  static #_ = this.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { SharedService };","map":{"version":3,"names":["map","SharedService","getstate","http","post","data","constructor","postState","pipe","res","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/yashankumar/Desktop/ample-angular-16-dashboard-free/angular-16/src/app/component/shared/shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SharedService {\n  getstate(): Observable<any> {\n    return this.http.post<any>(\"http://localhost:3000/States\", data)\n  }\n\n  constructor(private http : HttpClient) { }\n\n  postState(data:any){\n    return this.http.post<any>(\"http://localhost:3000/States\", data)\n    .pipe(map((res:any)=>{\n      return res;\n    }));\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,MAIaC,aAAa;EACxBC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAM,8BAA8B,EAAEC,IAAI,CAAC;EAClE;EAEAC,YAAoBH,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCI,SAASA,CAACF,IAAQ;IAChB,OAAO,IAAI,CAACF,IAAI,CAACC,IAAI,CAAM,8BAA8B,EAAEC,IAAI,CAAC,CAC/DG,IAAI,CAACR,GAAG,CAAES,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAAC,QAAAC,CAAA,G;qBAZUT,aAAa,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbd,aAAa;IAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;IAAAC,UAAA,EAHZ;EAAM;;SAGPjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}