{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass SharedService {\n  deletestate(id) {\n    return this.http.get(`http://localhost:5432/States?id=${id}`);\n  }\n  getDetailState(id) {\n    return this.http.get(`http://localhost:5432/State?id=${id}`);\n  }\n  getstate() {\n    return this.http.get(\"http://localhost:5432/States\");\n  }\n  constructor(http) {\n    this.http = http;\n  }\n  postState(data) {\n    debugger;\n    return this.http.post(\"http://localhost:5432/States\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  editState(id) {\n    return this.http.get(`http://localhost:5432/States?id=${id}`);\n  }\n  static #_ = this.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { SharedService };","map":{"version":3,"names":["map","SharedService","deletestate","id","http","get","getDetailState","getstate","constructor","postState","data","post","pipe","res","editState","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/yashankumar/Desktop/ample-angular-16-dashboard-free/angular-16/src/app/component/shared/shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SharedService {\n  deletestate(id: number) {\n    return this.http.get<any>(`http://localhost:5432/States?id=${id}`)\n  }\n  getDetailState(id: number) {\n    return this.http.get<any>(`http://localhost:5432/State?id=${id}`)\n  }\n  getstate(): Observable<any> {\n    return this.http.get<any>(\"http://localhost:5432/States\")\n  }\n\n  constructor(private http : HttpClient) { }\n\n  postState(data:any){\n    debugger;\n    return this.http.post<any>(\"http://localhost:5432/States\", data)\n    .pipe(map((res:any)=>{\n       return res;\n    }));\n  }\n\n  editState(id: number){\n    return this.http.get<any>(`http://localhost:5432/States?id=${id}`)\n  }\n\n  \n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,MAIaC,aAAa;EACxBC,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAM,mCAAmCF,EAAE,EAAE,CAAC;EACpE;EACAG,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAM,kCAAkCF,EAAE,EAAE,CAAC;EACnE;EACAI,QAAQA,CAAA;IACN,OAAO,IAAI,CAACH,IAAI,CAACC,GAAG,CAAM,8BAA8B,CAAC;EAC3D;EAEAG,YAAoBJ,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCK,SAASA,CAACC,IAAQ;IAChB;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,8BAA8B,EAAED,IAAI,CAAC,CAC/DE,IAAI,CAACZ,GAAG,CAAEa,GAAO,IAAG;MAClB,OAAOA,GAAG;IACb,CAAC,CAAC,CAAC;EACL;EAEAC,SAASA,CAACX,EAAU;IAClB,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAM,mCAAmCF,EAAE,EAAE,CAAC;EACpE;EAAC,QAAAY,CAAA,G;qBAvBUd,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbnB,aAAa;IAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;IAAAC,UAAA,EAHZ;EAAM;;SAGPtB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}