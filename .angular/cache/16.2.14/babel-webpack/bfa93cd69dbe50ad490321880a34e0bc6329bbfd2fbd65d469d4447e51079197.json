{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { stateModel } from './state.model';\nlet StateComponent = class StateComponent {\n  //StateDetails: any;\n  constructor(FormBuilder, api) {\n    this.FormBuilder = FormBuilder;\n    this.api = api;\n    this.StateDetails = [];\n    this.stateModelObj = new stateModel();\n  }\n  ngOnInit() {\n    this.getStateDetails();\n    this.formValue = this.FormBuilder.group({\n      countryName: [''],\n      stateName: ['']\n    });\n  }\n  postStateDetails() {\n    debugger;\n    this.stateModelObj.countryName = this.formValue.value.countryName;\n    this.stateModelObj.stateName = this.formValue.value.stateName;\n    this.api.postState(this.stateModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"State Added Successfully\");\n    }, err => {\n      alert(\"something went wrong\");\n    });\n  }\n  // getStateDetails(){\n  //   this.api.getstate()\n  //   .subscribe(res=>{\n  //     this.StateDetails = res;\n  //   });\n  // }\n  getStateDetails() {\n    this.api.getstate().subscribe(res => {\n      this.StateDetails = res;\n    });\n  }\n  deleteState(row) {\n    this.api.deletestate(row.stateName).subscribe(res => {\n      alert(\"State Deleted Successfully\");\n      this.getStateDetails();\n    });\n  }\n};\nStateComponent = __decorate([Component({\n  selector: 'app-state',\n  templateUrl: './state.component.html',\n  styleUrls: ['./state.component.scss']\n})], StateComponent);\nexport { StateComponent };","map":{"version":3,"names":["Component","stateModel","StateComponent","constructor","FormBuilder","api","StateDetails","stateModelObj","ngOnInit","getStateDetails","formValue","group","countryName","stateName","postStateDetails","value","postState","subscribe","res","console","log","alert","err","getstate","deleteState","row","deletestate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/yashankumar/Desktop/ample-angular-16-dashboard-free/angular-16/src/app/component/state/state.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {  SharedService } from '../shared/shared.service';\nimport { state } from '@angular/animations';\nimport { stateModel } from './state.model';\n\n@Component({\n  selector: 'app-state',\n  templateUrl: './state.component.html',\n  styleUrls: ['./state.component.scss']\n})\nexport class StateComponent implements OnInit{\n  StateDetails: any[] = [];\n  formValue !: FormGroup;\n  stateModelObj   :stateModel = new stateModel();\n  //StateDetails: any;\n  constructor (private FormBuilder: FormBuilder,\n    private api :SharedService) { }\n   \n  ngOnInit(): void {\n    this.getStateDetails();\n    this.formValue = this.FormBuilder.group({\n      countryName : [''],\n      stateName : ['']\n    })\n    \n  }\n\n  postStateDetails(){\n    debugger;\n    this.stateModelObj.countryName = this.formValue.value.countryName;\n    this.stateModelObj.stateName = this.formValue.value.stateName;\n\n    this.api.postState(this.stateModelObj)\n    .subscribe(res=>{\n      console.log(res);\n      alert(\"State Added Successfully\")\n    },\n    err=>{\n      alert(\"something went wrong\")\n    })\n  }\n\n    // getStateDetails(){\n    //   this.api.getstate()\n    //   .subscribe(res=>{\n    //     this.StateDetails = res;\n    //   });\n    // }\n\n    getStateDetails() {\n      this.api.getstate()\n        .subscribe((res: any) => { // Add type annotation to 'res'\n          this.StateDetails = res;\n        });\n    }\n\n    deleteState(row: any){\n      this.api.deletestate(row.stateName)\n      .subscribe((res: any)=>{\n        alert(\"State Deleted Successfully\");\n        this.getStateDetails();\n      })\n    }\n\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,UAAU,QAAQ,eAAe;AAO1C,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzB;EACAC,YAAqBC,WAAwB,EACnCC,GAAkB;IADP,KAAAD,WAAW,GAAXA,WAAW;IACtB,KAAAC,GAAG,GAAHA,GAAG;IALb,KAAAC,YAAY,GAAU,EAAE;IAExB,KAAAC,aAAa,GAAiB,IAAIN,UAAU,EAAE;EAGd;EAEhCO,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACtCC,WAAW,EAAG,CAAC,EAAE,CAAC;MAClBC,SAAS,EAAG,CAAC,EAAE;KAChB,CAAC;EAEJ;EAEAC,gBAAgBA,CAAA;IACd;IACA,IAAI,CAACP,aAAa,CAACK,WAAW,GAAG,IAAI,CAACF,SAAS,CAACK,KAAK,CAACH,WAAW;IACjE,IAAI,CAACL,aAAa,CAACM,SAAS,GAAG,IAAI,CAACH,SAAS,CAACK,KAAK,CAACF,SAAS;IAE7D,IAAI,CAACR,GAAG,CAACW,SAAS,CAAC,IAAI,CAACT,aAAa,CAAC,CACrCU,SAAS,CAACC,GAAG,IAAE;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,EACDC,GAAG,IAAE;MACHD,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEE;EACA;EACA;EACA;EACA;EACA;EAEAZ,eAAeA,CAAA;IACb,IAAI,CAACJ,GAAG,CAACkB,QAAQ,EAAE,CAChBN,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACZ,YAAY,GAAGY,GAAG;IACzB,CAAC,CAAC;EACN;EAEAM,WAAWA,CAACC,GAAQ;IAClB,IAAI,CAACpB,GAAG,CAACqB,WAAW,CAACD,GAAG,CAACZ,SAAS,CAAC,CAClCI,SAAS,CAAEC,GAAQ,IAAG;MACrBG,KAAK,CAAC,4BAA4B,CAAC;MACnC,IAAI,CAACZ,eAAe,EAAE;IACxB,CAAC,CAAC;EACJ;CAGH;AAvDYP,cAAc,GAAAyB,UAAA,EAL1B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW5B,cAAc,CAuD1B;SAvDYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}